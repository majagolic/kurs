package sud;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;


public class Test {
	
	public static Scanner scanner = new Scanner(System.in);

	public static void main(String[] args) {
		
		Evidencija evidencija = new Evidencija();
		
		evidencija.load("predmeti.txt");
		
		String izbor;
		do {
			System.out.println("1. Dodaj predmet");
			System.out.println("2. Ispisi predmete");
			System.out.println("3. Obrisi predmet");
			System.out.println("x. Izlaz");
			System.out.print("Odabir opcije: ");
			izbor = scanner.nextLine();
			
			switch (izbor) {
			case "1":
				dodajPredmet(evidencija);
				//3.opcija
				evidencija.sacuvajUFajl("predmeti.txt");
				break;
			case "2":
				ispisPredmeta(evidencija);
				break;
			case "3":
				obrisiPredmet(evidencija);
				//3.opcija
				evidencija.sacuvajUFajl("predmeti.txt");
				break;
			case "x":
				break;
			default:
				System.out.println("Opcija ne postoji.");
				break;
			}
			//2.opcija
			//evidencija.sacuvajUFajl("evidencija165.txt");
		} while (!izbor.equals("x"));
		
		scanner.close();
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		/*String d1 = "25.01.2017.";
		String d2 = "01.01.2017.";
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd.MM.yyyy.");
		LocalDate d1ZaDodavanje = null;
		
		try {
			d1ZaDodavanje = LocalDate.parse(d1, dtf);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		Predmet p1 = new Predmet(1, "Prvi predmet", "Tekst prvog predmeta", d1ZaDodavanje);

		try {
			d1ZaDodavanje = LocalDate.parse(d2, dtf);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Predmet p2 = new Predmet(2, "Drugi predmet", "Tekst drugog predmeta", d1ZaDodavanje);
		
		evidencija.dodajPredmet(p1);
		evidencija.dodajPredmet(p2);
		
		evidencija.dodajTekst("Neki Novi Tekst", 2);
		
		evidencija.ispisNaOsnovuBroja(2);
		
evidencija.ispisNaOsnovuImena("Prvi predmet");
		
		System.out.println(evidencija);
		evidencija.save("predmeti.txt");
		evidencija.getSpisakPredmeta().clear();
		evidencija.load("predmeti.txt");
		System.out.println();
		System.out.println(evidencija);
		
		LocalDate min = null;
		try {
			min = LocalDate.parse("15.01.2017.", dtf);
		} catch (Exception e) {
			e.printStackTrace();
		}
		LocalDate max = null;
		try {
			max = LocalDate.parse("25.01.2017.", dtf);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		System.out.println("Pretraga po datumima:");
		evidencija.ispisPredmetaUOpseguDatuma(min, max);
*/
	}
}

	


